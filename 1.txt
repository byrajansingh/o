1.Write a shell script that accepts a path name and creates all the components in that path name as
directories. For example, if the script is named mpc, then the command mpc a/b/c/d should create
directories a, a/b, a/b/c, a/b/c/d

clear
if [$# -ne 1]
then
echo “Invalid number of arguments”
else
mkdir -p $1
fi
Execution and Output:
$ sh first.sh Presidency/College/Kempapura/Bangalore
$ ls
Presidency
$ cd Presidency
$ ls
College
. . .

2. Write a shell script that accepts two file names as arguments, checks if the permissions for these
files are identical and if the permissions are identical, output common permissions and otherwise
output each file name followed by its permissions.

clear
if [ "$#" -ne 2 ]
then
echo Invalid number of arguments
else
ls -l $1 | cut -d ' ' -f1 > file1
ls -l $2 | cut -d ' ' -f1 > file2
if cmp file1 file2
then
echo " \n Both files have same permissions \n"
cat file1
else
echo " \n \n Files have different permissions \n"
echo The permissions of file $1
cat file1
echo The permissions of file $2
cat file2
fi
fi

Execution and Output:
$ sh second.sh ext1.txt example.sh # ext1.txt and example.sh are the files in the current
directory
file1 file2 differ: byte 4, line 1
Files have different permissions
The permissions of file ex1.txt
-rwxrw-r--
The permissions of file example.sh
-rw-rw-r--
$ sh second.sh
Invalid number of arguments

3. Write a shell script which accepts valid log- in names as arguments and
prints their corresponding home directories, if no arguments are specified,
print a suitable error message.

clear
if [ $# -eq 0 ]
then
echo “No command line arguments passed”
exit
fi
while [ $1 ]
do
cat /etc/passwd | cut -d ':' -f1 | grep ^$1 > temp
ck=`cat temp`
if [ $ck != $1 ]
then
echo Error:$1 is an invalid log-in name
else
echo Home Directory for $1 is:
cat /etc/passwd | grep "$1" | cut -d ':' -f6
fi
shift
done

Execution and Output:
$ sh third.sh
No command line arguments passed
$ sh third.sh veera
Home Directory for veera is:
/home/veera

4. Create a script file called file-properties that reads a file name entered and outputs it properties.

clear
echo Enter the filename:\c
read fn
if [ -f $fn ]
then
echo File permissions are
echo `ls -l $fn | cut -d ' ' -f1`
echo Number of links to the file
echo `ls -l $fn | cut -d ' ' -f2`
echo File size
echo `ls -l $fn | cut -d ' ' -f5`
echo Last modified Month
echo `ls -l $fn | cut -d ' ' -f6`
echo Last modified Date
echo `ls -l $fn | cut -d ' ' -f7`
else
echo File not found
fi

Execution and Output:
$ sh fourth.sh
Enter the filename:
first.sh
File permissions are
-rw-rw-r--
Number of links to the file
1
File size
334
Last modified Month
Jun
Last modified Date
15

5.Write a shell script that accept one or more file names as argument and convert all of them to
uppercase, provided they exist in current directory.

#! /bin/bash
clear
if [ $# -eq 0 ]
then
echo Invalid number of arguments
exit
fi
for fn in "$@"
do
if [ -f $fn ]
then
echo $fn | tr '[a-z]' '[A-Z]'
else
echo File not found
fi
done

Execution and Output:
$ sh fifth.sh
Invalid number of arguments
$ sh fifth.sh example.sh first.sh fifth.sh
EXAMPLE.SH
FIRST.SH
FIFTH.SH

6. Write a shell script that accepts as filename as argument and display its creation time if file
exist and if it does not send output error message.

#! /bin/bash
clear
if [ $# -ne 1 ]
then
echo Invalid number of arguments
exit
fi
if [ -e $1 ]
then
echo File $1 is created on :`ls -l | tr -s " " | cut -d " " -f6,7,8`
else
echo File not found
fi

Execution and Output:
$ sh sixth.sh
Invalid number of arguments
$ sh sixth.sh sixth.sh
File sixth.sh is created on :
Jul 12 09:13

7.Write a shell script to display the calendar for current month with current date replaced by *or**
depending on whether the date has one digit or two digits.

clear
a=`date +%e`
if [ $a -lt 10 ]
then
echo $a
cal | sed s/$a/*/
else
cal | sed s/$a/**/
echo $a
fi

Execution and Output:
sh seventh.sh
June 2022
Su Mo Tu We Th Fr Sa
1 2 3 4
5 6 7 8 9 10 11
12 13 14 15 16 17 18
19 20 21 22 23 24 25
** 27 28 29 30

8. Write a shell script to list all the files in a directory whose filename is at least 10 characters.
(use expr command to check the length)

#! /bin/bash
clear
echo `ls > listfiles`
echo the file with characters greater than 9
for i in `cat listfiles`
do
len=`expr length $i`
if [ $len -gt 9 ]
then
echo $i
else
continue
fi
done

Execution and Output:
$ sh eighth.sh
The files with characters greater than 9 are:
arithmeticcalculations.txt 26
calender.txt 12
example.sh 10
seventh.sh 10
working.txt 11

9. Write a shell script that gets executed displays the message either “Good Morning”
or “Good Afternoon” or “Good Evening” depending upon time at which the user logs in.

#! bin/bin/sh
clear
h=`who | head -1 | tr -s ' ' | cut -d ' ' -f4 | cut -d ':' -f1`
if [ $h -lt 12 ]
then
echo Good Morning
elif [ $h -ge 12 -a $h -lt 17 ]
then
echo Good Afternoon
else
echo Good Evening
fi

Execution and Output:
$ sh ninth.sh
Good Evening

10. Write a shell script that accept a list of filenames as its argument, count
and report occurrence of each word that is present in the first argument
file on other argument files.

clear
if [ $# -lt 2 ]
then
echo invalid arguments
exit
fi
for word in `cat $1`
do
for file in $*
do
if [ $file != "$1" ]
then
echo count :$word in $file
echo `grep -iow "$word" $file | wc -w`
fi
done
done

Execution and Output:
$ sh tenth.sh filename1 filename2
count :Ram in filename2.txt 2
count :BTech in filename2.txt 0
count :Raheem in filename2.txt 0
count :M in filename2.txt 0
count :Tech in filename2.txt 0
count :Joseph in filename2.txt 2
count :PhD in filename2.txt 1

11. Write a shell script that accept the filename, starting and ending line number as an argument
and display all the lines between the given line number.

clear
if [ $# -ne 3 ]
then
echo "Invalid number of arguments"
exit
fi
c=`cat $1 | wc -l`
if [ $2 -le 0 -o $3 -le 0 -o $2 -gt $3 -o $3 -gt $c ]
then
echo "Invalid Input" exit
fi
sed -n "$2, $3 p" $1

Execution and Output:
$ sh eleventh.sh file1 2 5
content of the file1 between 2nd and 5th line should be displayed